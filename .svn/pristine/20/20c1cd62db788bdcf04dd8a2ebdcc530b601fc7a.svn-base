package com.mtr.psn.controller.orders;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.mtr.psn.common.Constants;
import com.mtr.psn.common.PageSupport;
import com.mtr.psn.common.RedisAPI;
import com.mtr.psn.controller.BaseController;
import com.mtr.psn.model.orders.OrderForm;
import com.mtr.psn.model.orders.QueryOrder;
import com.mtr.psn.model.other.Menu;
import com.mtr.psn.model.user.Authority;
import com.mtr.psn.model.user.Function;
import com.mtr.psn.model.user.User;
import com.mtr.psn.service.orders.OrderFormService;
import com.mtr.psn.service.user.FunctionService;
import com.mtr.psn.service.user.UserService;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

@Controller
public class OrderFormController extends BaseController {

	@Resource
	private OrderFormService orderFormService;
	 
	/**
	 * 进入表格
	 
	 * @return
	 */
	@RequestMapping(value="/orders/theShippingBills.html",method=RequestMethod.GET)
	@ResponseBody
	public ModelAndView maincalendar (HttpSession session, 
			@RequestParam(value="currentpage",required=false) Integer currentpage,
			@RequestParam(value="orderForm",required=false) String orderFrom,
			@RequestParam(value="orderTo",required=false) String orderTo,
			@RequestParam(value="result",required=false) String result,
			@RequestParam(value="overTime",required=false) String overTime,
			@RequestParam(value="riderID",required=false) Integer riderID 
		){
		ModelAndView model = new ModelAndView();
		Map<String, Object> baseModel = (Map<String, Object>)session.getAttribute(Constants.SESSION_BASE_MODEL);
		if(baseModel == null){
			return new ModelAndView("redirect:/");
		}else{
			QueryOrder queryForm = new QueryOrder();
			if (orderFrom != null && orderFrom.toString() != "") {
				queryForm.setOrderForm(orderFrom);
			}
			if (orderTo != null && orderTo.toString() != "") {
				queryForm.setOrderTo(orderTo);
			}
			if (riderID != null && riderID.toString() != "") {
				queryForm.setRiderID(riderID);
			}
			if (overTime != null && overTime.toString() != "") {
				queryForm.setOverTime(overTime);
			}
			if (result != null && result.toString() != "") {
				queryForm.setResult(result);
			}
			PageSupport page = new PageSupport();	
			
			try {
				//获取后台总记录数
			//	page.setTotalCount(orderFormService.CountNorNumByRider(queryForm));
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				page.setTotalCount(0);
			}
			//总记录数必须大于0 才有意义
			if(page.getTotalCount() > 0){
				if(currentpage != null){
					page.setPage(currentpage);
				}
				if(page.getPage() <= 0){
					page.setPage(1);
				}
				if(page.getPage() > page.getPageCount()){
					page.setPage(page.getPageCount());
				}
				
				queryForm.setStarNum((page.getPage()-1)*page.getPageSize());//设置开始行
				queryForm.setPageSize(page.getPageSize());//设置每页显示数量
				//该用户当前页列表的数据
				List<OrderForm> orderForm = null;
				try {
				//	orderForm = orderFormService.selectOrderFormList(queryForm);
				} catch (Exception e) {
					// TODO: handle exception
					orderForm = null;
					if(page == null){
						page = new PageSupport();
						page.setItems(null);
					}
				}
				page.setItems(orderForm);//设置当前页列表数据
			}else{
				page.setItems(null);
			}
			model.addAllObjects(baseModel);//加载用户所属的功能菜单
			model.addObject("page",page);
			model.addObject("orderForm", orderFrom);
			model.addObject("orderTo", orderTo);
			model.addObject("riderID", riderID);
			model.addObject("result", result);
			model.addObject("overTime", overTime);
			model.setViewName("/orders/theShippingBills");
		}
	 return  model;
	}
	
	
}
