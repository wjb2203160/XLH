package com.mtr.psn.controller.goods;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.mtr.psn.common.Constants;
import com.mtr.psn.common.PageSupport;
import com.mtr.psn.common.SQLTools;
import com.mtr.psn.controller.BaseController;
import com.mtr.psn.model.goods.GoodsRegistrationForm;
import com.mtr.psn.model.other.DataDictionary;
import com.mtr.psn.model.webEntity.GoodsRegistrationFormEntiy;
import com.mtr.psn.service.goods.GoodsRegistrationFormService;
import com.mtr.psn.service.other.DataDictionaryService;
import com.mysql.jdbc.StringUtils;

@Controller
public class GoodsRegistrationFormController extends BaseController {

	@Resource
	private GoodsRegistrationFormService registrationFormService;
	@Resource
	private DataDictionaryService dataDictionaryService;
	
	@RequestMapping("/goods/goodsRegistrationFormList.html")
	public ModelAndView userList(Model model,HttpSession session, 
			@RequestParam(value="currentpage",required=false) Integer currentpage,
			@RequestParam(value="s_goodsName",required=false) String s_goodsName,
			@RequestParam(value="s_claimantName",required=false) String s_claimantName,
			@RequestParam(value="s_claimantPhone",required=false) String s_claimantPhone,
			@RequestParam(value="s_dep",required=false) String s_dep){
				
		Map<String, Object> baseModel = (Map<String, Object>)session.getAttribute(Constants.SESSION_BASE_MODEL);
		if(baseModel == null){
			return new ModelAndView("redirect:/");
		}else{
			//获取roleList and cardTypeList
			DataDictionary dataDictionary = new DataDictionary();
			dataDictionary.setTypeCode("GOODS_TYPE");
			List<DataDictionary> goodsTypeList = null;
			try {
				goodsTypeList = dataDictionaryService.selectAll(dataDictionary);
			} catch (Exception e) {
				// TODO: handle exception
			}
			/*
			 * 查询条件
			 */
			GoodsRegistrationForm registrationForm = new GoodsRegistrationForm();
			if(s_goodsName != null && s_goodsName != ""){
				registrationForm.setGoodsName("%"+SQLTools.transfer(s_goodsName)+"%");
			}
			if(s_claimantName != null && s_claimantName != ""){
				registrationForm.setClaimantName("%"+SQLTools.transfer(s_claimantName)+"%");
			}
			if(s_claimantPhone != null && s_claimantPhone != ""){
				registrationForm.setClaimantPhone("%"+SQLTools.transfer(s_claimantPhone)+"%");
			}
			if(!StringUtils.isNullOrEmpty(s_dep)){// != null and ""
				registrationForm.setDep(Integer.valueOf(s_dep));
			}else{
				registrationForm.setDep(null);
			}
			
			/*
			 * page分页列表
			 */
			PageSupport page = new PageSupport();			
			try {
				//获取后台总记录数
				page.setTotalCount(registrationFormService.count(registrationForm));
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				page.setTotalCount(0);
			}
			//总记录数必须大于0 才有意义
			if(page.getTotalCount() > 0){
				if(currentpage != null){
					page.setPage(currentpage);//设置当前页（用户输入）
				}
				if(page.getPage() <= 0){
					page.setPage(1);
				}
				if(page.getPage() > page.getPageCount()){
					page.setPage(page.getPageCount());
				}
				
				registrationForm.setStarNum((page.getPage()-1)*page.getPageSize());//设置开始行
				registrationForm.setPageSize(page.getPageSize());//设置每页显示数量
				//该用户当前页列表的数据
				List<GoodsRegistrationFormEntiy> registrationFormEntiys = null;
				try {
					registrationFormEntiys = registrationFormService.getPagesList(registrationForm);
				} catch (Exception e) {
					// TODO: handle exception
					registrationFormEntiys = null;
					if(page == null){
						page = new PageSupport();
						page.setItems(null);
					}
				}
				page.setItems(registrationFormEntiys);//设置当前页列表数据
			}else{
				page.setItems(null);
			}			
			
			model.addAllAttributes(baseModel);//加载用户所属的功能菜单
			model.addAttribute("page",page);
			model.addAttribute("goodsTypeList", goodsTypeList);
			model.addAttribute("s_goodsName", s_goodsName);
			model.addAttribute("s_claimantName", s_claimantName);
			model.addAttribute("s_claimantPhone", s_claimantPhone);
			model.addAttribute("s_dep", s_dep);
			
			return new ModelAndView("/goods/goodsRegistrationFormList");
		}
	}
	
}
